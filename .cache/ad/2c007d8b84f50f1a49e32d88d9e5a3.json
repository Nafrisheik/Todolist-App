{"id":"src/inputField.js","dependencies":[{"name":"B:\\irfan\\GUVI ZEN CLASS\\React intro\\package.json","includedInParent":true,"mtime":1605131376365},{"name":"react","loc":{"line":1,"column":40},"parent":"B:\\irfan\\GUVI ZEN CLASS\\React intro\\src\\inputField.js","resolved":"B:\\irfan\\GUVI ZEN CLASS\\React intro\\node_modules\\react\\index.js"},{"name":"reactstrap","loc":{"line":2,"column":59},"parent":"B:\\irfan\\GUVI ZEN CLASS\\React intro\\src\\inputField.js","resolved":"B:\\irfan\\GUVI ZEN CLASS\\React intro\\node_modules\\reactstrap\\es\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactstrap = require(\"reactstrap\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar InputField = function InputField(props) {\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var updateInput = function updateInput(evt) {\n    setInput(evt.target.value);\n  };\n\n  var submitTask = function submitTask() {\n    if (input) {\n      props.addTask(input);\n    }\n\n    ;\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactstrap.InputGroup, null, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {\n    type: \"text\",\n    value: input,\n    onChange: updateInput,\n    placeholder: \"Enter task\"\n  }), /*#__PURE__*/_react.default.createElement(_reactstrap.InputGroupAddon, {\n    addonType: \"append\"\n  }, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {\n    color: \"secondary\",\n    onClick: submitTask\n  }, \"+\"))));\n};\n\nvar _default = InputField;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/inputField.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"src/inputField.js","original":{"line":2,"column":0}},{"generated":{"line":28,"column":0},"source":"src/inputField.js","original":{"line":4,"column":0}},{"name":"InputField","generated":{"line":28,"column":4},"source":"src/inputField.js","original":{"line":4,"column":6}},{"generated":{"line":28,"column":14},"source":"src/inputField.js","original":{"line":4,"column":16}},{"generated":{"line":28,"column":17},"source":"src/inputField.js","original":{"line":4,"column":18}},{"name":"InputField","generated":{"line":28,"column":26},"source":"src/inputField.js","original":{"line":4,"column":6}},{"generated":{"line":28,"column":36},"source":"src/inputField.js","original":{"line":4,"column":18}},{"name":"props","generated":{"line":28,"column":37},"source":"src/inputField.js","original":{"line":4,"column":19}},{"generated":{"line":28,"column":42},"source":"src/inputField.js","original":{"line":4,"column":18}},{"generated":{"line":28,"column":44},"source":"src/inputField.js","original":{"line":4,"column":27}},{"generated":{"line":29,"column":0},"source":"src/inputField.js","original":{"line":4,"column":27}},{"generated":{"line":29,"column":18},"source":"src/inputField.js","original":{"line":6,"column":27}},{"generated":{"line":29,"column":39},"source":"src/inputField.js","original":{"line":6,"column":36}},{"generated":{"line":29,"column":41},"source":"src/inputField.js","original":{"line":6,"column":27}},{"generated":{"line":29,"column":42},"source":"src/inputField.js","original":{"line":4,"column":27}},{"generated":{"line":30,"column":0},"source":"src/inputField.js","original":{"line":4,"column":27}},{"generated":{"line":31,"column":0},"source":"src/inputField.js","original":{"line":4,"column":27}},{"name":"input","generated":{"line":31,"column":6},"source":"src/inputField.js","original":{"line":6,"column":11}},{"generated":{"line":31,"column":11},"source":"src/inputField.js","original":{"line":4,"column":27}},{"generated":{"line":32,"column":0},"source":"src/inputField.js","original":{"line":4,"column":27}},{"name":"setInput","generated":{"line":32,"column":6},"source":"src/inputField.js","original":{"line":6,"column":17}},{"generated":{"line":32,"column":14},"source":"src/inputField.js","original":{"line":4,"column":27}},{"generated":{"line":34,"column":0},"source":"src/inputField.js","original":{"line":8,"column":4}},{"name":"updateInput","generated":{"line":34,"column":6},"source":"src/inputField.js","original":{"line":8,"column":10}},{"generated":{"line":34,"column":17},"source":"src/inputField.js","original":{"line":8,"column":21}},{"generated":{"line":34,"column":20},"source":"src/inputField.js","original":{"line":8,"column":22}},{"name":"updateInput","generated":{"line":34,"column":29},"source":"src/inputField.js","original":{"line":8,"column":10}},{"generated":{"line":34,"column":40},"source":"src/inputField.js","original":{"line":8,"column":22}},{"name":"evt","generated":{"line":34,"column":41},"source":"src/inputField.js","original":{"line":8,"column":23}},{"generated":{"line":34,"column":44},"source":"src/inputField.js","original":{"line":8,"column":22}},{"generated":{"line":34,"column":46},"source":"src/inputField.js","original":{"line":8,"column":29}},{"name":"setInput","generated":{"line":35,"column":0},"source":"src/inputField.js","original":{"line":9,"column":8}},{"name":"setInput","generated":{"line":35,"column":4},"source":"src/inputField.js","original":{"line":9,"column":8}},{"generated":{"line":35,"column":12},"source":"src/inputField.js","original":{"line":9,"column":16}},{"name":"evt","generated":{"line":35,"column":13},"source":"src/inputField.js","original":{"line":9,"column":17}},{"generated":{"line":35,"column":16},"source":"src/inputField.js","original":{"line":9,"column":20}},{"name":"target","generated":{"line":35,"column":17},"source":"src/inputField.js","original":{"line":9,"column":21}},{"generated":{"line":35,"column":23},"source":"src/inputField.js","original":{"line":9,"column":17}},{"name":"value","generated":{"line":35,"column":24},"source":"src/inputField.js","original":{"line":9,"column":28}},{"generated":{"line":35,"column":29},"source":"src/inputField.js","original":{"line":9,"column":16}},{"generated":{"line":35,"column":30},"source":"src/inputField.js","original":{"line":9,"column":8}},{"generated":{"line":36,"column":0},"source":"src/inputField.js","original":{"line":11,"column":5}},{"generated":{"line":36,"column":3},"source":"src/inputField.js","original":{"line":8,"column":4}},{"generated":{"line":38,"column":0},"source":"src/inputField.js","original":{"line":13,"column":4}},{"name":"submitTask","generated":{"line":38,"column":6},"source":"src/inputField.js","original":{"line":13,"column":10}},{"generated":{"line":38,"column":16},"source":"src/inputField.js","original":{"line":13,"column":20}},{"generated":{"line":38,"column":19},"source":"src/inputField.js","original":{"line":13,"column":22}},{"name":"submitTask","generated":{"line":38,"column":28},"source":"src/inputField.js","original":{"line":13,"column":10}},{"generated":{"line":38,"column":38},"source":"src/inputField.js","original":{"line":13,"column":22}},{"generated":{"line":38,"column":41},"source":"src/inputField.js","original":{"line":13,"column":27}},{"generated":{"line":39,"column":0},"source":"src/inputField.js","original":{"line":14,"column":8}},{"name":"input","generated":{"line":39,"column":8},"source":"src/inputField.js","original":{"line":14,"column":11}},{"generated":{"line":39,"column":13},"source":"src/inputField.js","original":{"line":14,"column":8}},{"generated":{"line":39,"column":15},"source":"src/inputField.js","original":{"line":14,"column":17}},{"name":"props","generated":{"line":40,"column":0},"source":"src/inputField.js","original":{"line":15,"column":12}},{"name":"props","generated":{"line":40,"column":6},"source":"src/inputField.js","original":{"line":15,"column":12}},{"generated":{"line":40,"column":11},"source":"src/inputField.js","original":{"line":15,"column":17}},{"name":"addTask","generated":{"line":40,"column":12},"source":"src/inputField.js","original":{"line":15,"column":18}},{"generated":{"line":40,"column":19},"source":"src/inputField.js","original":{"line":15,"column":12}},{"name":"input","generated":{"line":40,"column":20},"source":"src/inputField.js","original":{"line":15,"column":26}},{"generated":{"line":40,"column":25},"source":"src/inputField.js","original":{"line":15,"column":12}},{"generated":{"line":41,"column":0},"source":"src/inputField.js","original":{"line":16,"column":9}},{"generated":{"line":43,"column":0},"source":"src/inputField.js","original":{"line":16,"column":9}},{"name":"setInput","generated":{"line":44,"column":0},"source":"src/inputField.js","original":{"line":17,"column":12}},{"name":"setInput","generated":{"line":44,"column":4},"source":"src/inputField.js","original":{"line":17,"column":12}},{"generated":{"line":44,"column":12},"source":"src/inputField.js","original":{"line":17,"column":20}},{"generated":{"line":44,"column":13},"source":"src/inputField.js","original":{"line":17,"column":21}},{"generated":{"line":44,"column":15},"source":"src/inputField.js","original":{"line":17,"column":20}},{"generated":{"line":44,"column":16},"source":"src/inputField.js","original":{"line":17,"column":12}},{"generated":{"line":45,"column":0},"source":"src/inputField.js","original":{"line":19,"column":5}},{"generated":{"line":45,"column":3},"source":"src/inputField.js","original":{"line":13,"column":4}},{"generated":{"line":47,"column":0},"source":"src/inputField.js","original":{"line":21,"column":4}},{"generated":{"line":47,"column":22},"source":"src/inputField.js","original":{"line":22,"column":8}},{"generated":{"line":47,"column":51},"source":"src/inputField.js","original":{"line":22,"column":9}},{"generated":{"line":47,"column":66},"source":"src/inputField.js","original":{"line":22,"column":8}},{"generated":{"line":47,"column":87},"source":"src/inputField.js","original":{"line":23,"column":8}},{"generated":{"line":47,"column":116},"source":"src/inputField.js","original":{"line":23,"column":9}},{"generated":{"line":47,"column":138},"source":"src/inputField.js","original":{"line":23,"column":8}},{"generated":{"line":47,"column":159},"source":"src/inputField.js","original":{"line":24,"column":8}},{"generated":{"line":47,"column":188},"source":"src/inputField.js","original":{"line":24,"column":9}},{"generated":{"line":47,"column":205},"source":"src/inputField.js","original":{"line":24,"column":8}},{"generated":{"line":48,"column":0},"source":"src/inputField.js","original":{"line":24,"column":16}},{"generated":{"line":48,"column":4},"source":"src/inputField.js","original":{"line":24,"column":16}},{"generated":{"line":48,"column":8},"source":"src/inputField.js","original":{"line":24,"column":20}},{"generated":{"line":48,"column":10},"source":"src/inputField.js","original":{"line":24,"column":21}},{"generated":{"line":48,"column":16},"source":"src/inputField.js","original":{"line":24,"column":8}},{"generated":{"line":49,"column":0},"source":"src/inputField.js","original":{"line":24,"column":28}},{"generated":{"line":49,"column":4},"source":"src/inputField.js","original":{"line":24,"column":28}},{"generated":{"line":49,"column":9},"source":"src/inputField.js","original":{"line":24,"column":33}},{"name":"input","generated":{"line":49,"column":11},"source":"src/inputField.js","original":{"line":24,"column":35}},{"generated":{"line":49,"column":16},"source":"src/inputField.js","original":{"line":24,"column":8}},{"generated":{"line":50,"column":0},"source":"src/inputField.js","original":{"line":24,"column":42}},{"generated":{"line":50,"column":4},"source":"src/inputField.js","original":{"line":24,"column":42}},{"generated":{"line":50,"column":12},"source":"src/inputField.js","original":{"line":24,"column":50}},{"name":"updateInput","generated":{"line":50,"column":14},"source":"src/inputField.js","original":{"line":24,"column":52}},{"generated":{"line":50,"column":25},"source":"src/inputField.js","original":{"line":24,"column":8}},{"generated":{"line":51,"column":0},"source":"src/inputField.js","original":{"line":24,"column":66}},{"generated":{"line":51,"column":4},"source":"src/inputField.js","original":{"line":24,"column":66}},{"generated":{"line":51,"column":15},"source":"src/inputField.js","original":{"line":24,"column":77}},{"generated":{"line":51,"column":17},"source":"src/inputField.js","original":{"line":24,"column":78}},{"generated":{"line":52,"column":0},"source":"src/inputField.js","original":{"line":24,"column":8}},{"generated":{"line":52,"column":4},"source":"src/inputField.js","original":{"line":23,"column":8}},{"generated":{"line":52,"column":19},"source":"src/inputField.js","original":{"line":25,"column":8}},{"generated":{"line":52,"column":48},"source":"src/inputField.js","original":{"line":25,"column":9}},{"generated":{"line":52,"column":75},"source":"src/inputField.js","original":{"line":25,"column":8}},{"generated":{"line":53,"column":0},"source":"src/inputField.js","original":{"line":25,"column":26}},{"generated":{"line":53,"column":4},"source":"src/inputField.js","original":{"line":25,"column":26}},{"generated":{"line":53,"column":13},"source":"src/inputField.js","original":{"line":25,"column":35}},{"generated":{"line":53,"column":15},"source":"src/inputField.js","original":{"line":25,"column":36}},{"generated":{"line":54,"column":0},"source":"src/inputField.js","original":{"line":25,"column":8}},{"generated":{"line":54,"column":18},"source":"src/inputField.js","original":{"line":26,"column":8}},{"generated":{"line":54,"column":47},"source":"src/inputField.js","original":{"line":26,"column":9}},{"generated":{"line":54,"column":65},"source":"src/inputField.js","original":{"line":26,"column":8}},{"generated":{"line":55,"column":0},"source":"src/inputField.js","original":{"line":26,"column":16}},{"generated":{"line":55,"column":4},"source":"src/inputField.js","original":{"line":26,"column":16}},{"generated":{"line":55,"column":9},"source":"src/inputField.js","original":{"line":26,"column":21}},{"generated":{"line":55,"column":11},"source":"src/inputField.js","original":{"line":26,"column":22}},{"generated":{"line":55,"column":22},"source":"src/inputField.js","original":{"line":26,"column":8}},{"generated":{"line":56,"column":0},"source":"src/inputField.js","original":{"line":26,"column":34}},{"generated":{"line":56,"column":4},"source":"src/inputField.js","original":{"line":26,"column":34}},{"generated":{"line":56,"column":11},"source":"src/inputField.js","original":{"line":26,"column":41}},{"name":"submitTask","generated":{"line":56,"column":13},"source":"src/inputField.js","original":{"line":26,"column":43}},{"generated":{"line":57,"column":0},"source":"src/inputField.js","original":{"line":26,"column":8}},{"generated":{"line":57,"column":9},"source":"src/inputField.js","original":{"line":25,"column":8}},{"generated":{"line":57,"column":10},"source":"src/inputField.js","original":{"line":23,"column":8}},{"generated":{"line":57,"column":11},"source":"src/inputField.js","original":{"line":22,"column":8}},{"generated":{"line":57,"column":12},"source":"src/inputField.js","original":{"line":21,"column":4}},{"generated":{"line":58,"column":0},"source":"src/inputField.js","original":{"line":33,"column":1}},{"generated":{"line":58,"column":1},"source":"src/inputField.js","original":{"line":4,"column":0}},{"name":"InputField","generated":{"line":60,"column":15},"source":"src/inputField.js","original":{"line":34,"column":15}}],"sources":{"src/inputField.js":"import React, {Fragment, useState} from \"react\";\r\nimport { InputGroup, InputGroupAddon, Button, Input } from 'reactstrap';\r\n\r\nconst InputField =(props)=>{\r\n\r\n    const [input,setInput]=useState(\"\");\r\n    \r\n    const updateInput=(evt)=>{\r\n        setInput(evt.target.value) ;\r\n\r\n    }\r\n    \r\n    const submitTask= () =>{\r\n        if(input){\r\n            props.addTask(input);\r\n        };\r\n            setInput(\"\");\r\n        \r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n        <InputGroup>\r\n        <Input  type=\"text\" value={input} onChange={updateInput}  placeholder=\"Enter task\"/>\r\n        <InputGroupAddon  addonType=\"append\">\r\n        <Button color=\"secondary\" onClick={submitTask}>+</Button>\r\n        </InputGroupAddon>\r\n        </InputGroup>\r\n            {/* <input type=\"text\" value={input} onChange={updateInput}  placeholder=\"Enter task\"></input>\r\n            <button onClick={submitTask}>+</button> */}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default InputField;\r\n"},"lineCount":null}},"error":null,"hash":"a4e92ddce8a47312c01b092c06cc2a1e","cacheData":{"env":{}}}